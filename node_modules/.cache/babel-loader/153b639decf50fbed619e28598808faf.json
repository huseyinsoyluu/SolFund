{"ast":null,"code":"var _jsxFileName = \"/Users/huseyin/site2/SolFund/src/components/Cause1.js\",\n    _s = $RefreshSig$();\n\nimport cause1 from './images/afghanistan.jpg';\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport userAddress from './userAddress';\nimport { FUNDRAISER_ADDRESS, FUNDRAISER_ABI } from './config.js';\nimport { Link, Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cause1 = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const [cause1Title, setCause1Title] = useState();\n  const [cause1Desc, setCause1Desc] = useState();\n  const [targetAmount, setTargetAmount] = useState();\n  const [donatedAmount, setDonatedAmount] = useState();\n  const [toDonate, setToDonate] = useState();\n  useEffect(() => {\n    async function load() {\n      const provider = new ethers.providers.JsonRpcProvider('http://localhost:7545');\n      const contract = new ethers.Contract(FUNDRAISER_ADDRESS, FUNDRAISER_ABI, provider);\n      const causeNames = await contract.getCauseNames();\n      setCause1Title(String(causeNames[0]));\n      const desc1 = String(await contract.getCauseDesc(cause1Title));\n      setCause1Desc(String(desc1));\n      const target = await contract.getCauseTargetAmount(cause1Title);\n      const donated = await contract.getCauseDonatedAmount(cause1Title);\n      setTargetAmount(String(target));\n      setDonatedAmount(String(donated));\n    }\n\n    load();\n  }, []);\n\n  function updateAmount(event) {\n    setToDonate(event.target.value);\n  }\n\n  function donateAmount(event) {\n    async function load() {\n      const provider = new ethers.providers.JsonRpcProvider('http://localhost:7545');\n      const signer = provider.getSigner(userAddress.value);\n      const contract = new ethers.Contract(FUNDRAISER_ADDRESS, FUNDRAISER_ABI, signer);\n      console.log(userAddress.value);\n      console.log(toDonate);\n      const var_ = await contract.donateToCause(cause1Title, {\n        value: ethers.utils.parseEther(toDonate),\n        from: userAddress.value\n      });\n    }\n\n    load();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"donate\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header-cause\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: cause1,\n        className: \"img-cause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), cause1Title, /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p-cause\",\n        children: cause1Desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"space\",\n        children: \"Empty space1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"target-amount\",\n        children: [\"Target Amount = \", targetAmount, \" SOL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"current-amount\",\n        children: [\"Current Donations = \", donatedAmount, \" SOL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"amount\",\n            name: \"amount\",\n            placeholder: \"amount\",\n            onChange: updateAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"donate-btn\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/popup\",\n          onClick: donateAmount,\n          children: \"Donate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cause1, \"wMo4Xrf12+zYE0fNeihR4jhpKfI=\");\n\n_c = Cause1;\nexport default Cause1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cause1\");","map":{"version":3,"sources":["/Users/huseyin/site2/SolFund/src/components/Cause1.js"],"names":["cause1","React","useEffect","useState","ethers","userAddress","FUNDRAISER_ADDRESS","FUNDRAISER_ABI","Link","Switch","Route","BrowserRouter","Router","Cause1","props","cause1Title","setCause1Title","cause1Desc","setCause1Desc","targetAmount","setTargetAmount","donatedAmount","setDonatedAmount","toDonate","setToDonate","load","provider","providers","JsonRpcProvider","contract","Contract","causeNames","getCauseNames","String","desc1","getCauseDesc","target","getCauseTargetAmount","donated","getCauseDonatedAmount","updateAmount","event","value","donateAmount","signer","getSigner","console","log","var_","donateToCause","utils","parseEther","from"],"mappings":"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","sourcesContent":["import cause1 from './images/afghanistan.jpg';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport userAddress from './userAddress';\r\nimport { FUNDRAISER_ADDRESS, FUNDRAISER_ABI } from './config.js';\r\n\r\nimport {\r\n  Link,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from 'react-router-dom';\r\n\r\nconst Cause1 = ({ props }) => {\r\n  const [cause1Title, setCause1Title] = useState();\r\n  const [cause1Desc, setCause1Desc] = useState();\r\n  const [targetAmount, setTargetAmount] = useState();\r\n  const [donatedAmount, setDonatedAmount] = useState();\r\n\r\n  const [toDonate, setToDonate] = useState();\r\n\r\n  useEffect(() => {\r\n    async function load() {\r\n      const provider = new ethers.providers.JsonRpcProvider(\r\n        'http://localhost:7545'\r\n      );\r\n\r\n      const contract = new ethers.Contract(\r\n        FUNDRAISER_ADDRESS,\r\n        FUNDRAISER_ABI,\r\n        provider\r\n      );\r\n\r\n      const causeNames = await contract.getCauseNames();\r\n      setCause1Title(String(causeNames[0]));\r\n\r\n      const desc1 = String(await contract.getCauseDesc(cause1Title));\r\n      setCause1Desc(String(desc1));\r\n\r\n      const target = await contract.getCauseTargetAmount(cause1Title);\r\n      const donated = await contract.getCauseDonatedAmount(\r\n        cause1Title\r\n      );\r\n\r\n      setTargetAmount(String(target));\r\n      setDonatedAmount(String(donated));\r\n    }\r\n\r\n    load();\r\n  }, []);\r\n\r\n  function updateAmount(event) {\r\n    setToDonate(event.target.value);\r\n  }\r\n\r\n  function donateAmount(event) {\r\n    async function load() {\r\n      const provider = new ethers.providers.JsonRpcProvider(\r\n        'http://localhost:7545'\r\n      );\r\n      const signer = provider.getSigner(userAddress.value);\r\n\r\n      const contract = new ethers.Contract(\r\n        FUNDRAISER_ADDRESS,\r\n        FUNDRAISER_ABI,\r\n        signer\r\n      );\r\n\r\n      console.log(userAddress.value);\r\n      console.log(toDonate);\r\n      const var_ = await contract.donateToCause(cause1Title, {\r\n        value: ethers.utils.parseEther(toDonate),\r\n        from: userAddress.value,\r\n      });\r\n    }\r\n\r\n    load();\r\n  }\r\n\r\n  return (\r\n    <div className=\"donate\">\r\n      <header className=\"header-cause\">\r\n        <img src={cause1} className=\"img-cause\" />\r\n        {cause1Title}\r\n        <p className=\"p-cause\">{cause1Desc}</p>\r\n        <p className=\"space\">Empty space1</p>\r\n\r\n        <p className=\"target-amount\">\r\n          Target Amount = {targetAmount} SOL\r\n        </p>\r\n\r\n        <p className=\"current-amount\">\r\n          Current Donations = {donatedAmount} SOL\r\n        </p>\r\n\r\n        <div className=\"form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"amount\">Amount</label>\r\n            <input\r\n              type=\"amount\"\r\n              name=\"amount\"\r\n              placeholder=\"amount\"\r\n              onChange={updateAmount}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"button\" className=\"donate-btn\">\r\n          <Link to=\"/popup\" onClick={donateAmount}>\r\n            Donate\r\n          </Link>\r\n        </button>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cause1;\r\n"]},"metadata":{},"sourceType":"module"}